#include<windows.h>
#include<GL/glut.h>
#include<math.h>
#include <iostream>

using namespace std;
void ground();
void pond();


void init() {
	glClearColor(0.0, 0.0, 0.0, 0.5);

}

void display() {
	glClearColor(0.0f, 0.0f, 0.0f, 0.5f);
	glClear(GL_COLOR_BUFFER_BIT);

	ground();
	pond();
	glFlush();
}

//ground
void ground() {
	glBegin(GL_POLYGON);
	glColor3f(0, 1, 0);
	double radius = 2;
	double ori_x = 0.0;                         // the origin or center of circle
	double ori_y = 0.0;
	for (size_t j = 0; j < 5; j++)
	{
		for (int i = 0; i <= 300; i++) {
			double angle = 2 * 3.14 * i / 300;
			double x = cos(angle) * radius;
			double y = sin(angle) * radius;
			glVertex3d(ori_x + x, ori_y + y, j);
		}
	}
	glEnd();
}

//pond
void pond() {
	glLineWidth(5);
	glBegin(GL_LINE_LOOP);
	glColor3f(1, 1, 1);
	glVertex3d(-0.130816, 1.070193, 0.000000);
	glVertex3d(-0.142683, 1.073843, 0.000000);
	glVertex3d(-0.155295, 1.076165, 0.000000);
	glVertex3d(-0.168394, 1.077112, 0.000000);
	glVertex3d(-0.181713, 1.076664, 0.000000);
	glVertex3d(-0.194983, 1.074830, 0.000000);
	glVertex3d(-0.207931, 1.071648, 0.000000);
	glVertex3d(-0.220296, 1.067183, 0.000000);
	glVertex3d(-0.231824, 1.061525, 0.000000);
	glVertex3d(-0.242283, 1.054790, 0.000000);
	glVertex3d(-0.251457, 1.047114, 0.000000);
	glVertex3d(-0.380376, 0.923880, 0.000000);
	glVertex3d(-0.415800, 0.886557, 0.000000);
	glVertex3d(-0.428834, 0.873513, 0.000000);
	glVertex3d(-0.443864, 0.859732, 0.000000);
	glVertex3d(-0.460583, 0.845495, 0.000000);
	glVertex3d(-0.478650, 0.831091, 0.000000);
	glVertex3d(-0.497699, 0.816814, 0.000000);
	glVertex3d(-0.517340, 0.802954, 0.000000);
	glVertex3d(-0.537175, 0.789794, 0.000000);
	glVertex3d(-0.556800, 0.777601, 0.000000);
	glVertex3d(-0.575814, 0.766623, 0.000000);
	glVertex3d(-0.593832, 0.757084, 0.000000);
	glVertex3d(-0.610485, 0.749179, 0.000000);
	glVertex3d(-0.705346, 0.707107, 0.000000);
	glVertex3d(-0.724457, 0.657180, 0.000000);
	glVertex3d(-0.732242, 0.638412, 0.000000);
	glVertex3d(-0.741805, 0.618106, 0.000000);
	glVertex3d(-0.752952, 0.596673, 0.000000);
	glVertex3d(-0.765456, 0.574550, 0.000000);
	glVertex3d(-0.779063, 0.552188, 0.000000);
	glVertex3d(-0.793495, 0.530041, 0.000000);
	glVertex3d(-0.808459, 0.508561, 0.000000);
	glVertex3d(-0.823650, 0.488186, 0.000000);
	glVertex3d(-0.838759, 0.469329, 0.000000);
	glVertex3d(-0.853478, 0.452374, 0.000000);
	glVertex3d(-0.867507, 0.437667, 0.000000);
	glVertex3d(-0.922937, 0.382683, 0.000000);
	glVertex3d(-1.001521, 0.302478, 0.000000);
	glVertex3d(-1.014772, 0.287050, 0.000000);
	glVertex3d(-1.026513, 0.269393, 0.000000);
	glVertex3d(-1.036507, 0.249868, 0.000000);
	glVertex3d(-1.044548, 0.228870, 0.000000);
	glVertex3d(-1.050474, 0.206829, 0.000000);
	glVertex3d(-1.054164, 0.184192, 0.000000);
	glVertex3d(-1.055543, 0.161421, 0.000000);
	glVertex3d(-1.054583, 0.138978, 0.000000);
	glVertex3d(-1.051303, 0.117321, 0.000000);
	glVertex3d(-1.045771, 0.096891, 0.000000);
	glVertex3d(-1.038097, 0.078104, 0.000000);
	glVertex3d(-1.000023, 0.000000, 0.000000);
	glVertex3d(-1.038290, -0.073676, 0.000000);
	glVertex3d(-1.046149, -0.091580, 0.000000);
	glVertex3d(-1.052007, -0.111119, 0.000000);
	glVertex3d(-1.055745, -0.131896, 0.000000);
	glVertex3d(-1.057286, -0.153488, 0.000000);
	glVertex3d(-1.056599, -0.175455, 0.000000);
	glVertex3d(-1.053699, -0.197350, 0.000000);
	glVertex3d(-1.048644, -0.218728, 0.000000);
	glVertex3d(-1.041537, -0.239153, 0.000000);
	glVertex3d(-1.032523, -0.258209, 0.000000);
	glVertex3d(-1.021785, -0.275509, 0.000000);
	glVertex3d(-1.009541, -0.290700, 0.000000);
	glVertex3d(-0.924867, -0.382683, 0.000000);
	glVertex3d(-0.880901, -0.414770, 0.000000);
	glVertex3d(-0.865396, -0.427080, 0.000000);
	glVertex3d(-0.849423, -0.441699, 0.000000);
	glVertex3d(-0.833306, -0.458330, 0.000000);
	glVertex3d(-0.817375, -0.476634, 0.000000);
	glVertex3d(-0.801952, -0.496240, 0.000000);
	glVertex3d(-0.787353, -0.516747, 0.000000);
	glVertex3d(-0.773873, -0.537738, 0.000000);
	glVertex3d(-0.761789, -0.558786, 0.000000);
	glVertex3d(-0.751345, -0.579463, 0.000000);
	glVertex3d(-0.742755, -0.599347, 0.000000);
	glVertex3d(-0.736192, -0.618034, 0.000000);
	glVertex3d(-0.708913, -0.707107, 0.000000);
	glVertex3d(-0.647525, -0.722295, 0.000000);
	glVertex3d(-0.626332, -0.728536, 0.000000);
	glVertex3d(-0.603823, -0.737079, 0.000000);
	glVertex3d(-0.580454, -0.747749, 0.000000);
	glVertex3d(-0.556702, -0.760328, 0.000000);
	glVertex3d(-0.533051, -0.774562, 0.000000);
	glVertex3d(-0.509982, -0.790160, 0.000000);
	glVertex3d(-0.487964, -0.806805, 0.000000);
	glVertex3d(-0.467445, -0.824157, 0.000000);
	glVertex3d(-0.448845, -0.841865, 0.000000);
	glVertex3d(-0.432540, -0.859566, 0.000000);
	glVertex3d(-0.418863, -0.876901, 0.000000);
	glVertex3d(-0.385036, -0.923880, 0.000000);
	glVertex3d(-0.297081, -1.010104, 0.000000);
	glVertex3d(-0.282122, -1.022928, 0.000000);
	glVertex3d(-0.265029, -1.034202, 0.000000);
	glVertex3d(-0.246151, -1.043694, 0.000000);
	glVertex3d(-0.225871, -1.051213, 0.000000);
	glVertex3d(-0.204602, -1.056605, 0.000000);
	glVertex3d(-0.182777, -1.059760, 0.000000);
	glVertex3d(-0.160841, -1.060615, 0.000000);
	glVertex3d(-0.139240, -1.059151, 0.000000);
	glVertex3d(-0.118414, -1.055398, 0.000000);
	glVertex3d(-0.098787, -1.049434, 0.000000);
	glVertex3d(-0.080758, -1.041379, 0.000000);
	glVertex3d(-0.002545, -1.000000, 0.000000);
	glVertex3d(0.081745, -1.043550, 0.000000);
	glVertex3d(0.099562, -1.051296, 0.000000);
	glVertex3d(0.118936, -1.056956, 0.000000);
	glVertex3d(0.139472, -1.060416, 0.000000);
	glVertex3d(0.160753, -1.061606, 0.000000);
	glVertex3d(0.182345, -1.060500, 0.000000);
	glVertex3d(0.203809, -1.057122, 0.000000);
	glVertex3d(0.224708, -1.051540, 0.000000);
	glVertex3d(0.244616, -1.043868, 0.000000);
	glVertex3d(0.263128, -1.034262, 0.000000);
	glVertex3d(0.279867, -1.022918, 0.000000);
	glVertex3d(0.294493, -1.010066, 0.000000);
	glVertex3d(0.380331, -0.923879, 0.000000);
	glVertex3d(0.425211, -0.866716, 0.000000);
	glVertex3d(0.438435, -0.851206, 0.000000);
	glVertex3d(0.454048, -0.835292, 0.000000);
	glVertex3d(0.471732, -0.819299, 0.000000);
	glVertex3d(0.491127, -0.803553, 0.000000);
	glVertex3d(0.511839, -0.788373, 0.000000);
	glVertex3d(0.533445, -0.774070, 0.000000);
	glVertex3d(0.555507, -0.760933, 0.000000);
	glVertex3d(0.577574, -0.749231, 0.000000);
	glVertex3d(0.599197, -0.739201, 0.000000);
	glVertex3d(0.619937, -0.731048, 0.000000);
	glVertex3d(0.639371, -0.724939, 0.000000);
	glVertex3d(0.705301, -0.707106, 0.000000);
	glVertex3d(0.725274, -0.631076, 0.000000);
	glVertex3d(0.731158, -0.612025, 0.000000);
	glVertex3d(0.739101, -0.591765, 0.000000);
	glVertex3d(0.748942, -0.570708, 0.000000);
	glVertex3d(0.760479, -0.549284, 0.000000);
	glVertex3d(0.773478, -0.527928, 0.000000);
	glVertex3d(0.787674, -0.507076, 0.000000);
	glVertex3d(0.802779, -0.487151, 0.000000);
	glVertex3d(0.818485, -0.468559, 0.000000);
	glVertex3d(0.834472, -0.451678, 0.000000);
	glVertex3d(0.850414, -0.436854, 0.000000);
	glVertex3d(0.865988, -0.424386, 0.000000);
	glVertex3d(0.922892, -0.382683, 0.000000);
	glVertex3d(1.004166, -0.294874, 0.000000);
	glVertex3d(1.017009, -0.279037, 0.000000);
	glVertex3d(1.028294, -0.261003, 0.000000);
	glVertex3d(1.037792, -0.241137, 0.000000);
	glVertex3d(1.045308, -0.219844, 0.000000);
	glVertex3d(1.050691, -0.197558, 0.000000);
	glVertex3d(1.053829, -0.174732, 0.000000);
	glVertex3d(1.054661, -0.151832, 0.000000);
	glVertex3d(1.053167, -0.129322, 0.000000);
	glVertex3d(1.049380, -0.107663, 0.000000);
	glVertex3d(1.043376, -0.087293, 0.000000);
	glVertex3d(1.035277, -0.068629, 0.000000);
	glVertex3d(0.999977, 0.000001, 0.000000);
	glVertex3d(1.036859, 0.072958, 0.000000);
	glVertex3d(1.045174, 0.092517, 0.000000);
	glVertex3d(1.051238, 0.113783, 0.000000);
	glVertex3d(1.054928, 0.136321, 0.000000);
	glVertex3d(1.056168, 0.159673, 0.000000);
	glVertex3d(1.054934, 0.183363, 0.000000);
	glVertex3d(1.051250, 0.206910, 0.000000);
	glVertex3d(1.045192, 0.229834, 0.000000);
	glVertex3d(1.036882, 0.251669, 0.000000);
	glVertex3d(1.026490, 0.271969, 0.000000);
	glVertex3d(1.014227, 0.290322, 0.000000);
	glVertex3d(1.000344, 0.306354, 0.000000);
	glVertex3d(0.924821, 0.382684, 0.000000);
	glVertex3d(0.837975, 0.467474, 0.000000);
	glVertex3d(0.828666, 0.477101, 0.000000);
	glVertex3d(0.818921, 0.488220, 0.000000);
	glVertex3d(0.808939, 0.500605, 0.000000);
	glVertex3d(0.798923, 0.514002, 0.000000);
	glVertex3d(0.789077, 0.528139, 0.000000);
	glVertex3d(0.779602, 0.542729, 0.000000);
	glVertex3d(0.770690, 0.557474, 0.000000);
	glVertex3d(0.762523, 0.572075, 0.000000);
	glVertex3d(0.755267, 0.586233, 0.000000);
	glVertex3d(0.749069, 0.599662, 0.000000);
	glVertex3d(0.744057, 0.612087, 0.000000);
	glVertex3d(0.708866, 0.707108, 0.000000);
	glVertex3d(0.591171, 0.765913, 0.000000);
	glVertex3d(0.578568, 0.772520, 0.000000);
	glVertex3d(0.564840, 0.780302, 0.000000);
	glVertex3d(0.550267, 0.789102, 0.000000);
	glVertex3d(0.535144, 0.798740, 0.000000);
	glVertex3d(0.519780, 0.809020, 0.000000);
	glVertex3d(0.504488, 0.819733, 0.000000);
	glVertex3d(0.489578, 0.830661, 0.000000);
	glVertex3d(0.475355, 0.841581, 0.000000);
	glVertex3d(0.462108, 0.852271, 0.000000);
	glVertex3d(0.450106, 0.862513, 0.000000);
	glVertex3d(0.439595, 0.872099, 0.000000);
	glVertex3d(0.384989, 0.923880, 0.000000);
	glVertex3d(0.261607, 1.038035, 0.000000);
	glVertex3d(0.251336, 1.046355, 0.000000);
	glVertex3d(0.239635, 1.053659, 0.000000);
	glVertex3d(0.226740, 1.059799, 0.000000);
	glVertex3d(0.212915, 1.064649, 0.000000);
	glVertex3d(0.198441, 1.068110, 0.000000);
	glVertex3d(0.183612, 1.070112, 0.000000);
	glVertex3d(0.168731, 1.070615, 0.000000);
	glVertex3d(0.154101, 1.069607, 0.000000);
	glVertex3d(0.140018, 1.067111, 0.000000);
	glVertex3d(0.126771, 1.063175, 0.000000);
	glVertex3d(0.114628, 1.057881, 0.000000);
	glVertex3d(0.002499, 1.000000, 0.000000);
	glVertex3d(-0.119934, 1.065289, 0.000000);
	glEnd();
}

void resize(GLsizei w, GLsizei h) {
	glViewport(0, 0, w, h);

	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();

	glOrtho(-4, 4, -4, 4, -4, 4);

	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();

}
int main(int argc, char* argv[]) {
	glutInit(&argc, argv);
	glutInitWindowSize(1000, 1000);
	glutCreateWindow("Window Creation");
	glutPositionWindow(100, 100);
	glutDisplayFunc(display);
	glutReshapeFunc(resize);
	init();
	glutMainLoop();

	return 0;
}